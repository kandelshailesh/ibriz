{"version":3,"sources":["components/Table/Table.tsx","utils/index.ts","pages/Incident/Table/column.tsx","components/Dropdown/dropdown.tsx","components/Menu/menu.tsx","components/Filter/filter.tsx","pages/Incident/Filter/index.tsx","components/TableSkeleton/skeleton.tsx","pages/Incident/Table/index.tsx","pages/Incident/index.tsx"],"names":["Table","columns","total","dataSource","loading","pagination","onChange","val","console","log","pageSize","defaultCurrent","showTotal","range","position","renderEmpty","description","size","length","scroll","isMobile","x","indicator","style","marginTop","spinning","rowKey","timestamptoDate","timestamp","moment","Date","format","fetchIncidents","params","a","re","URLSearchParams","toString","axios","get","then","result","data","Error","key","title","dataIndex","width","align","fixed","render","record","textAlign","lines","more","less","className","anchorClass","expanded","opacity","media","image_url_thumb","alt","height","src","Dropdown","overlay","trigger","onClick","e","preventDefault","DownOutlined","Menu","item","map","i","Item","Filter","placeholder","type","direction","allowClear","RangePicker","getComponent","menu_item","IncidentFilter","setFilter","filter","setFilterData","useState","filterBy","setFilterBy","filterTitle","setFilterTitle","filterDateRange","setFilterDateRange","menu","filterByList","target","value","dates","date1","unix","date2","r","marginLeft","filteredData","toLowerCase","indexOf","message","error","occurred_at","err","CloseCircleOutlined","SkeletonTable","props","rowCount","Array","_","index","column","paragraph","IncidentTableContainer","styled","div","IncidentTable","setTotal","setLoading","filterbiketheftList","setFilterBikeTheftList","biketheftList","setBikeTheftList","area","getTotal","proximity","incident_type","incidents","useEffect","shape","IncidentContainer","primary","Incident"],"mappings":"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","file":"static/js/4.c999f564.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Table as ATable, Spin, ConfigProvider, Empty } from 'antd';\nimport { isMobile } from 'react-device-detect';\n\nexport interface IColumn {\n  key?: string;\n  title?: string;\n  dataIndex?: string;\n  render?: (_: any) => JSX.Element;\n  align?: string;\n  width?: string | number;\n  fixed?: string;\n}\n\ninterface Props {\n  columns: Array<any>;\n  dataSource: Array<any>;\n  total: number;\n  loading: boolean;\n}\n\nconst Table: React.FC<Props> = ({ columns, total, dataSource, loading }) => {\n  const onPagechange = (val: any) => {\n    console.log('Page', val);\n  };\n\n  const pagination: any = {\n    total: total,\n    onChange: onPagechange,\n    pageSize: 10,\n    defaultCurrent: 1,\n    showTotal: (total: number, range: Array<number>) =>\n      `${range[0]}-${range[1]} of ${total} items`,\n    position: ['bottomRight'],\n  };\n\n  return (\n    <ConfigProvider\n      renderEmpty={() =>\n        loading ? (\n          <span></span>\n        ) : (\n          <Empty description={'No any incidents found'} />\n        )\n      }\n    >\n      <ATable\n        size={'small'}\n        pagination={dataSource.length > 0 ? pagination : {}}\n        dataSource={dataSource}\n        columns={columns}\n        scroll={isMobile ? { x: 300 } : {}}\n        // locale={{ emptyText: loading ? '' : 'No any data in the list' }}\n        loading={{\n          indicator: <Spin style={{ marginTop: 30 }} />,\n          spinning: loading ? true : false,\n        }}\n        rowKey=\"id\"\n      ></ATable>\n    </ConfigProvider>\n  );\n};\n\nexport default Table;\n","import moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nexport const timestamptoDate = (timestamp: number): string => {\r\n  return moment(new Date(timestamp * 1000)).format('YYYY-MM-DD');\r\n};\r\nexport const fetchIncidents = async (\r\n  params: Record<string, string>,\r\n): Promise<unknown> => {\r\n  try {\r\n    const re = new URLSearchParams(params).toString();\r\n    return await axios.get('/incidents?' + re).then((result) => result.data);\r\n  } catch (err) {\r\n    throw new Error('Error while fetching data');\r\n  }\r\n};\r\n","/* eslint-disable react/display-name */\r\nimport React from \"react\";\r\nimport { timestamptoDate } from \"utils\";\r\nimport ShowMoreText from \"react-show-more-text\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { IColumn } from \"components/Table/Table\";\r\n\r\nexport const columns: Array<IColumn> = [\r\n  {\r\n    key: \"id\",\r\n    title: \"ID\",\r\n    dataIndex: \"id\",\r\n    width: isMobile ? 100 : \"5%\",\r\n    align: \"center\",\r\n    fixed: \"left\",\r\n    render: (record: number): JSX.Element => <b>#{record}</b>,\r\n  },\r\n  {\r\n    key: \"title\",\r\n    title: \"Case Title\",\r\n    dataIndex: \"title\",\r\n    width: isMobile ? 100 : \"20%\",\r\n    align: \"center\",\r\n    fixed: \"left\",\r\n    render: (record: string): JSX.Element =>\r\n      record ? (\r\n        <p style={{ textAlign: \"left\" }}>\r\n          <ShowMoreText\r\n            /* Default options */\r\n            lines={3}\r\n            more=\"Show more\"\r\n            less=\"Show less\"\r\n            className=\"content-css\"\r\n            anchorClass=\"my-anchor-css-class\"\r\n            expanded={false}\r\n          >\r\n            {record}\r\n          </ShowMoreText>\r\n        </p>\r\n      ) : (\r\n        <p style={{ textAlign: \"center\", opacity: 0.7 }}>-</p>\r\n      ),\r\n  },\r\n  {\r\n    key: \"description\",\r\n    title: \"Description\",\r\n    dataIndex: \"description\",\r\n    align: \"center\",\r\n    render: (record: string): JSX.Element =>\r\n      record ? (\r\n        <p style={{ textAlign: \"left\" }}>\r\n          <ShowMoreText\r\n            /* Default options */\r\n            lines={3}\r\n            more=\"Show more\"\r\n            less=\"Show less\"\r\n            className=\"content-css\"\r\n            anchorClass=\"my-anchor-css-class\"\r\n            expanded={false}\r\n          >\r\n            {record}\r\n          </ShowMoreText>\r\n        </p>\r\n      ) : (\r\n        <p style={{ textAlign: \"center\", opacity: 0.7 }}>\r\n          Description not available\r\n        </p>\r\n      ),\r\n    width: isMobile ? 200 : \"20%\",\r\n    fixed: \"left\",\r\n  },\r\n  {\r\n    key: \"theft_date\",\r\n    title: \"Theft Date\",\r\n    dataIndex: \"occurred_at\",\r\n    align: \"center\",\r\n    render: (record: number): JSX.Element => (\r\n      <span>{timestamptoDate(record)}</span>\r\n    ),\r\n    width: isMobile ? 100 : \"10%\",\r\n  },\r\n  {\r\n    key: \"reported_date\",\r\n    title: \"Reported Date\",\r\n    dataIndex: \"updated_at\",\r\n    render: (record: number): JSX.Element => (\r\n      <span>{timestamptoDate(record)}</span>\r\n    ),\r\n    align: \"center\",\r\n    width: isMobile ? 100 : \"10%\",\r\n  },\r\n  {\r\n    key: \"location\",\r\n    title: \"Location\",\r\n    dataIndex: \"address\",\r\n    align: \"center\",\r\n    width: isMobile ? 100 : \"10%\",\r\n  },\r\n  {\r\n    key: \"picture\",\r\n    title: \"Image\",\r\n    render: (record: any): JSX.Element =>\r\n      record.media.image_url_thumb ? (\r\n        <img\r\n          alt=\"Bike\"\r\n          width={isMobile ? 100 : 200}\r\n          height=\"100\"\r\n          src={record?.media?.image_url_thumb}\r\n        />\r\n      ) : (\r\n        <p style={{ textAlign: \"center\", opacity: 0.7 }}>Image not available</p>\r\n      ),\r\n    width: isMobile ? 100 : \"10%\",\r\n    align: \"center\",\r\n  },\r\n];\r\n","import React from 'react';\r\nimport { Dropdown as ADropdown, Button } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\ninterface Props {\r\n  overlay: any;\r\n}\r\n\r\nconst Dropdown: React.FC<Props> = ({ overlay }) => {\r\n  return (\r\n    <ADropdown trigger={['click']} overlay={overlay}>\r\n      <Button\r\n        className=\"ant-dropdown-link\"\r\n        onClick={(e: any) => e.preventDefault()}\r\n      >\r\n        Filter By <DownOutlined />\r\n      </Button>\r\n    </ADropdown>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from 'react';\r\nimport { Menu as AMenu } from 'antd';\r\n\r\nexport interface IMenuItem {\r\n  key: any;\r\n  title: any;\r\n}\r\n\r\ninterface Props {\r\n  item: Array<IMenuItem>;\r\n  onClick: (e: any) => void;\r\n}\r\n\r\nconst Menu: React.FC<Props> = ({ item, onClick }) => {\r\n  return (\r\n    <AMenu onClick={onClick}>\r\n      {item.map(({ key, title }, i) => (\r\n        <AMenu.Item key={key}>\r\n          <span>{title}</span>\r\n        </AMenu.Item>\r\n      ))}\r\n    </AMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { Space, Input, DatePicker } from 'antd';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\ninterface Props {\r\n  placeholder?: string;\r\n  type: string;\r\n  onChange?: () => void;\r\n  title?: string;\r\n}\r\n\r\nconst Filter: React.FC<Props> = ({ placeholder, title, type, onChange }) => {\r\n  console.log(placeholder, title, type, onChange);\r\n  const getComponent = (type: string) => {\r\n    switch (type) {\r\n      case 'text':\r\n        return (\r\n          <Space size='middle' direction={'horizontal'}>\r\n            <label>{title}</label>\r\n            <Input\r\n              allowClear\r\n              placeholder={placeholder}\r\n              onChange={onChange}\r\n            ></Input>\r\n          </Space>\r\n        );\r\n      case 'daterange':\r\n        return (\r\n          <Space size='middle' direction={'horizontal'}>\r\n            <label>Occured Date</label>\r\n            <DatePicker.RangePicker\r\n              onChange={onChange}\r\n              style={{ width: isMobile ? '80%' : '' }}\r\n            ></DatePicker.RangePicker>\r\n          </Space>\r\n        );\r\n    }\r\n  };\r\n  return <>{getComponent(type)}</>;\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useState } from \"react\";\nimport Dropdown from \"components/Dropdown\";\nimport Menu, { IMenuItem } from \"components/Menu/menu\";\nimport { Button, message, Space } from \"antd\";\nimport Filter from \"components/Filter\";\nimport { CloseCircleOutlined } from \"@ant-design/icons\";\nimport { isMobile } from \"react-device-detect\";\n\nexport const menu_item: Array<IMenuItem> = [\n  {\n    key: \"title\",\n    title: \"Title\",\n  },\n  { key: \"occurred_at\", title: \"Occurred Date\" },\n];\n\ninterface Props {\n  dataSource: any;\n  filter?: boolean;\n  setFilter?: any;\n  setFilterData?: any;\n}\nconst IncidentFilter: React.FC<Props> = ({\n  dataSource,\n  filter,\n  setFilter,\n  setFilterData,\n}) => {\n  const [filterBy, setFilterBy] = useState<null | string>(\"\");\n  const [filterTitle, setFilterTitle] = useState<null | string>(\"\");\n  const [filterDateRange, setFilterDateRange] = useState<Array<number>>([]);\n\n  const onMenuClick = (e: any) => {\n    setFilterBy(e.key);\n  };\n\n  const menu = <Menu onClick={onMenuClick} item={menu_item}></Menu>;\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterTitle(e.target.value);\n  };\n  const handleDateChange = (dates: any) => {\n    if (dates) {\n      const date1 = dates[0].unix();\n      const date2 = dates[1].unix();\n      setFilterDateRange([date1, date2]);\n    }\n  };\n\n  const filterByList: any = [\n    {\n      placeholder: \"Title\",\n      title: \"Title\",\n      type: \"text\",\n      key: \"title\",\n      onChange: handleTitleChange,\n    },\n    {\n      title: \"Occurred Date\",\n      type: \"daterange\",\n      key: \"occurred_at\",\n      onChange: handleDateChange,\n    },\n  ];\n\n  const handleClearFilter = () => {\n    setFilterBy(\"\");\n    setFilter(false);\n    setFilterData(dataSource);\n  };\n  const handleFilter = () => {\n    try {\n      let filteredData = dataSource;\n      switch (filterBy) {\n        case \"title\":\n          if (filterTitle) {\n            filteredData = dataSource.filter(\n              ({ title }: any) =>\n                title.toLowerCase().indexOf(filterTitle.toLowerCase()) !== -1,\n            );\n          } else {\n            message.error(\"Please enter title\");\n          }\n          break;\n        case \"occurred_at\":\n          if (filterDateRange.length > 0) {\n            filteredData = dataSource.filter(\n              ({ occurred_at }: any) =>\n                occurred_at >= filterDateRange[0] &&\n                occurred_at <= filterDateRange[1],\n            );\n          } else {\n            message.error(\"Please select occurred date\");\n          }\n          break;\n      }\n      setFilter(true);\n      setFilterData(filteredData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <Space size=\"middle\" direction={isMobile ? \"vertical\" : \"horizontal\"}>\n      <Dropdown overlay={menu}></Dropdown>\n      {filterBy && (\n        <>\n          <Filter {...filterByList.filter((r: any) => r.key === filterBy)[0]} />\n          <Space direction={\"horizontal\"} style={{ marginLeft: 0 }}>\n            <Button type=\"primary\" onClick={handleFilter}>\n              Filter\n            </Button>\n            <Button onClick={handleClearFilter} type=\"link\">\n              <CloseCircleOutlined />\n              Clear Filters\n            </Button>\n          </Space>\n        </>\n      )}\n    </Space>\n  );\n};\n\nexport default IncidentFilter;\n","import React from \"react\";\r\nimport { Table, Skeleton } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst SkeletonTable = (props: any): JSX.Element => {\r\n  const { columns, rowCount }: any = props as [];\r\n  return (\r\n    <Table\r\n      rowKey=\"key\"\r\n      pagination={false}\r\n      dataSource={[...Array(rowCount)].map((_, index) => ({\r\n        key: `key${index}`,\r\n      }))}\r\n      columns={columns.map((column: any) => {\r\n        return {\r\n          ...column,\r\n          render: function renderPlaceholder() {\r\n            return (\r\n              <Skeleton key={column.dataIndex} title={true} paragraph={false} />\r\n            );\r\n          },\r\n        };\r\n      })}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SkeletonTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Table from \"components/Table\";\r\nimport { columns } from \"./column\";\r\nimport { fetchIncidents } from \"utils/index\";\r\nimport Filter from \"../Filter\";\r\nimport { message, Space } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"components/Loader\";\r\nimport SkeletonTable from \"components/TableSkeleton\";\r\nimport SkeletonButton from \"antd/lib/skeleton/Button\";\r\n\r\nexport interface IIncidentList {\r\n  title: string;\r\n  description: string;\r\n  occurred_at: string;\r\n  reported_at: string;\r\n  media?: any;\r\n}\r\n\r\nexport interface IParams {\r\n  proximity: string;\r\n  incident_type: string;\r\n}\r\nconst IncidentTableContainer = styled.div`\r\n  display: block;\r\n  width: 80%;\r\n  height: 100%;\r\n  margin: 0px auto;\r\n  padding: 10px;\r\n  @media screen and (max-width: 700px) {\r\n    width: 100% !important ;\r\n  }\r\n`;\r\n\r\nconst IncidentTable: React.FC = (): JSX.Element => {\r\n  const [total, setTotal] = useState<number>(0);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [filterbiketheftList, setFilterBikeTheftList] = useState<Array<any>>(\r\n    [],\r\n  );\r\n  const [biketheftList, setBikeTheftList] = useState<Array<any>>([]);\r\n  const [filter, setFilter] = useState(false);\r\n  const [area, setArea] = useState(\"Berlin\");\r\n\r\n  const getTotal = async () => {\r\n    try {\r\n      const params: Record<string, string> = {\r\n        proximity: area,\r\n        incident_type: \"theft\",\r\n      };\r\n      const result: any = await fetchIncidents(params);\r\n      setBikeTheftList(result.incidents);\r\n      setFilterBikeTheftList(result.incidents);\r\n      setLoading(false);\r\n      setTotal(result.incidents.length);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setLoading(false);\r\n      message.error(\"Error while fetching data\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTotal();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <IncidentTableContainer>\r\n        <Space style={{ width: \"100%\" }} direction=\"vertical\" size=\"middle\">\r\n          <SkeletonButton shape=\"square\"></SkeletonButton>\r\n          <SkeletonTable rowCount={10} columns={columns} />\r\n        </Space>\r\n      </IncidentTableContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <IncidentTableContainer>\r\n      <Space direction=\"vertical\" size=\"middle\">\r\n        <Filter\r\n          filter={filter}\r\n          setFilter={setFilter}\r\n          dataSource={biketheftList}\r\n          setFilterData={setFilterBikeTheftList}\r\n        />\r\n        <Table\r\n          total={total}\r\n          dataSource={filter ? filterbiketheftList : biketheftList}\r\n          columns={columns}\r\n          loading={loading}\r\n        ></Table>\r\n      </Space>\r\n    </IncidentTableContainer>\r\n  );\r\n};\r\n\r\nexport default IncidentTable;\r\n","import React from \"react\";\r\nimport IncidentTable from \"./Table\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IIncidentContainer {\r\n  primary?: boolean;\r\n}\r\n\r\nconst IncidentContainer = styled.div`\r\n  background: ${(props: IIncidentContainer) =>\r\n    props.primary ? \"palevioletred\" : \"white\"};\r\n  height: 100%;\r\n  width: 100vw;\r\n`;\r\n\r\nconst Incident: React.FC = () => {\r\n  return (\r\n    <IncidentContainer>\r\n      <IncidentTable />\r\n    </IncidentContainer>\r\n  );\r\n};\r\n\r\nexport default Incident;\r\n"],"sourceRoot":""}